"use strict";(self.webpackChunkyearn_devdocs=self.webpackChunkyearn_devdocs||[]).push([[4995],{72291:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var r=o(74848),n=o(28453);const s={},a="Protocol Fees",c={id:"v3/protocol_fees",title:"Protocol Fees",description:'The V3 system sees the introduction of "Protocol Fees" to the stack, a percentage charged each time a V3 vault or strategy "reports".',source:"@site/docs/developers/v3/protocol_fees.md",sourceDirName:"v3",slug:"/v3/protocol_fees",permalink:"/developers/v3/protocol_fees",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1730237247e3,frontMatter:{},sidebar:"developers",previous:{title:"Periphery",permalink:"/developers/v3/periphery"},next:{title:"Getting Started with Vaults and Strategies",permalink:"/developers/v2/getting-started"}},l={},i=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"protocol-fees",children:"Protocol Fees"})}),"\n",(0,r.jsx)(t.p,{children:'The V3 system sees the introduction of "Protocol Fees" to the stack, a percentage charged each time a V3 vault or strategy "reports".'}),"\n",(0,r.jsx)(t.p,{children:"Protocol fees give the managers of vaults and strategies complete control over the fees charged while rewarding Yearn for supplying the infrastructure those vaults are built on."}),"\n",(0,r.jsx)(t.p,{children:"Yearn Governance dictates the amount of the Protocol fee and can be set anywhere between 0 - 50%. Yearn governance also holds the ability to set custom protocol fees for individual vaults and strategies. Allowing full customization of the system."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-markdown",metastring:'title="Example"',children:"profit = 100\nperformance_fee = 20%\nprotocol_fee = 10%\n\ntotal_fees = profit * performance_fee = 20\nprotocol_fees = total_fees * protocol_fee = 2\nperformance_fees = total_fees - protocol_fees = 18\n\n18 would get paid to the vault managers performance_fee_recipient.\n2 would get paid to the Yearn Treasury.\n"})}),"\n",(0,r.jsx)(t.p,{children:"You can retrieve both the default protocol fee as well as if a custom config has been set for a specific vault or strategy using the Vault Factory that corresponds to that vault's API."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-solidity",metastring:'title="Examples"',children:"# Retrieve the default config.\nvaultFactory.protocol_fee_config()\n\n# Check a specific vault current config to be used\nvaultFactory.protocol_fee_config(vault_address)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>c});var r=o(96540);const n={},s=r.createContext(n);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);